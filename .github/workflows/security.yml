name: Security Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Check for hardcoded credentials
      run: |
        echo "üîç Checking for hardcoded credentials..."
        
        # Check for API keys
        if grep -r "AIza" . --exclude-dir=.git --exclude-dir=.venv --exclude-dir=__pycache__; then
          echo "‚ùå Found potential API keys"
          exit 1
        fi
        
        # Check for private keys
        if grep -r "-----BEGIN PRIVATE KEY-----" . --exclude-dir=.git --exclude-dir=.venv --exclude-dir=__pycache__; then
          echo "‚ùå Found hardcoded private keys"
          exit 1
        fi
        
        # Check for secrets
        if grep -r "sk-" . --exclude-dir=.git --exclude-dir=.venv --exclude-dir=__pycache__; then
          echo "‚ùå Found potential secrets"
          exit 1
        fi
        
        echo "‚úÖ No hardcoded credentials found"
    
    - name: Check for sensitive files
      run: |
        echo "üîç Checking for sensitive files..."
        
        # Check if any .mcp.json files are being committed
        if find . -name "*.mcp.json" -not -path "./.git/*"; then
          echo "‚ùå Found MCP config files that might contain credentials"
          exit 1
        fi
        
        echo "‚úÖ No sensitive files found"
    
    - name: Verify package security
      run: |
        echo "üîç Verifying package security..."
        
        # Build package
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        uv build
        
        # Check package contents for credentials
        python -c "
        import tarfile
        t = tarfile.open('dist/google_sheets_mcp-0.1.0.tar.gz')
        files = [f.name for f in t.getmembers() if f.name.endswith('.py')]
        
        # Check if any Python files contain credential patterns
        for file_info in t.getmembers():
            if file_info.name.endswith('.py'):
                try:
                    content = t.extractfile(file_info).read().decode('utf-8')
                    if 'AIza' in content or 'sk-' in content or '-----BEGIN PRIVATE KEY-----' in content:
                        print(f'‚ùå Found credentials in {file_info.name}')
                        exit(1)
                except:
                    pass
        
        print('‚úÖ Package security verified')
        "
